**Painel de Administração**

**Objetivo:**
O Painel de Administração da Excellent Cloud é uma interface web desenvolvida para gerenciar operações administrativas relacionadas à plataforma Excellent Cloud, que oferece serviços de compra de créditos para nuvens. Este documento técnico explora os principais recursos e funcionalidades do Painel de Administração, destacando trechos importantes do código-fonte para facilitar a compreensão.

**Visão Geral do Código:**

O código HTML define a estrutura da página web, enquanto o código JavaScript fornece a lógica de interatividade e funcionalidade dinâmica.

**Estrutura HTML:**
- O documento HTML define a estrutura básica da página, incluindo elementos como cabeçalho, corpo e áreas de conteúdo específicas.
- A estrutura da barra lateral apresenta links para diferentes seções administrativas, como Gerenciar Taxas, Clientes, Financeiro, etc.
- Cada seção de conteúdo é representada por uma `div` com um `id` único, permitindo o controle dinâmico da visibilidade.

**Funcionalidades JavaScript:**

1. **Exibição de Ajuda:**
   - Quando o link "Ajuda" é clicado, a função `showAjuda()` é chamada para mostrar a seção de Ajuda.
   - A função `hideAllSections()` é usada para ocultar outras seções, garantindo que apenas a seção de Ajuda seja exibida.

2. **Alerta de Atualização do Sistema:**
   - Ao carregar a página, a função `exibirAlerta()` exibe um pop-up de alerta com informações importantes sobre a atualização do sistema.
   - O pop-up inclui novidades, avisos e informações relevantes para os administradores.

3. **Navegação entre Seções:**
   - Eventos de clique são adicionados aos links da barra lateral para cada seção administrativa, como Suporte, Integrações, etc.
   - Quando um link é clicado, a função correspondente é acionada para mostrar a seção relevante e ocultar outras seções.
   - O código garante uma experiência de navegação fluida entre as diferentes áreas do Painel de Administração.

4. **Gerenciamento de Usuários:**
   - O Painel de Administração oferece funcionalidades para criar, editar e excluir usuários administrativos.
   - Os eventos de clique são adicionados aos botões correspondentes, como "Criar Novo Usuário", "Editar Usuário Existente" e "Excluir Usuário Existente".
   - A lógica é implementada para preencher e manipular os formulários de criação, edição e exclusão de usuários, proporcionando uma experiência de administração simplificada.

5. **Configurações de Integrações:**
   - A seção de Configurações de Integrações permite aos administradores configurar diferentes tipos de integrações, como API, Webhook, OAuth, etc.
   - Um formulário é fornecido para inserir detalhes da integração, como nome, URL, descrição, token de autenticação, etc.
   - O evento de envio do formulário é tratado para processar e armazenar as configurações de integrações, garantindo uma integração suave com outros sistemas e plataformas.



### Documentação Técnica - JavaScript

#### 1. Event Listener para DOMContentLoaded:
   - Quando o DOM (Document Object Model) é completamente carregado, este evento é acionado.
   - Uma função é associada a este evento para executar quando ele é acionado.
   - Isso garante que o código JavaScript seja executado somente após o carregamento completo do DOM, evitando erros de referência a elementos HTML que ainda não foram carregados.

#### 2. Definição de Seções:
   - Um objeto chamado `sections` é criado para mapear os IDs dos links de navegação aos IDs das seções correspondentes no HTML.
   - Isso permite que os links de navegação sejam associados às seções relevantes no documento HTML.
   - Os IDs dos links de navegação são usados como chaves do objeto e os IDs das seções como os valores correspondentes.

#### 3. Loop de Event Listeners para Links de Navegação:
   - Um loop `for...of` é utilizado para iterar sobre as entradas do objeto `sections`.
   - Para cada entrada, um evento de clique é adicionado ao elemento de link de navegação correspondente.
   - Quando um link de navegação é clicado, uma função `showSection()` é chamada, passando o ID da seção correspondente como argumento.
   - O método `preventDefault()` é chamado no evento de clique para evitar que o navegador siga o link normalmente.

#### 4. Função `showSection(sectionId)`:
   - Esta função é responsável por exibir a seção correspondente ao ID passado como argumento.
   - Todas as outras seções são ocultadas, adicionando a classe CSS 'hidden' a elas.
   - A seção especificada é exibida, removendo a classe 'hidden'.
   - Se a seção exibida for 'taxas', a função também adiciona um evento de clique aos botões de edição dentro dessa seção.
   - Quando um botão de edição é clicado, a função alterna entre os modos de edição e visualização dos campos de entrada de taxa e exibe um alerta quando a taxa é salva com sucesso.

#### 5. Função `showAjuda()`:
   - Esta função é responsável por exibir a tela de ajuda.
   - Ela oculta todas as outras seções e remove a classe 'hidden' da seção de ajuda.

#### 6. Função `hideAllSections()`:
   - Esta função é responsável por ocultar todas as seções.
   - Ela adiciona a classe 'hidden' a todas as divs de conteúdo dentro do elemento com a classe '.content'.

#### 7. Event Listeners para Links de Ajuda e FAQ:
   - Eventos de clique são adicionados aos links de ajuda e FAQ.
   - Quando clicados, eles chamam as funções `showAjuda()` e `showFaq()`, respectivamente.
   - Essas funções ocultam todas as outras seções e exibem a seção correspondente ao link clicado.

#### 8. Event Listener para Envio de Formulário de Integrações:
   - Um evento de envio de formulário é adicionado ao formulário de integrações.
   - Quando o formulário é enviado, a função `handleIntegracoesFormSubmission()` é chamada.
   - Este evento é interceptado usando o método `preventDefault()` para evitar o comportamento padrão de envio do formulário.

#### 9. Função `handleIntegracoesFormSubmission()`:
   - Esta função é responsável por lidar com o envio do formulário de integrações.
   - Ela recupera os valores dos campos do formulário e os exibe no console.
   - Um alerta é exibido para indicar que a integração foi salva com sucesso.